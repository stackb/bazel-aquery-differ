load("@io_bazel_rules_go//go:def.bzl", "go_binary", "go_library")
load(":platforms.bzl", "platforms")

go_library(
    name = "aquerydiff_lib",
    srcs = [
        "action.go",
        "action_graph.go",
        "action_output_map.go",
        "action_output_pair.go",
        "artifact_path_map.go",
        "config.go",
        "dep_set_of_files_map.go",
        "dep_set_resolver.go",
        "main.go",
        "path_fragment_resolver.go",
        "target_map.go",
    ],
    importpath = "github.com/stackb/bazel-aquery-differ/cmd/aquerydiff",
    visibility = ["//visibility:private"],
    deps = [
        "//build/stack/bazel/aquery/differ:differ_go_proto",
        "//pkg/protobuf",
        "@bazelapis//src/main/protobuf:analysis_v2_go_proto",
        "@com_github_google_go_cmp//cmp",
        "@com_github_google_go_cmp//cmp/cmpopts",
        "@com_github_pmezard_go_difflib//difflib",
    ],
)

go_binary(
    name = "aquerydiff",
    embed = [":aquerydiff_lib"],
    visibility = ["//visibility:public"],
)

[
    go_binary(
        name = "aquerydiff_%s_%s" % (
            platform.os,
            platform.arch,
        ),
        embed = [":aquerydiff_lib"],
        gc_linkopts = platform.gc_linkopts,
        goarch = platform.arch,
        goos = platform.os,
        pure = "on",
        static = "on",
        visibility = ["//visibility:public"],
    )
    for platform in platforms
]

[
    genrule(
        name = "aquerydiff_%s_%s_zip" % (
            platform.os,
            platform.arch,
        ),
        srcs = ["aquerydiff_%s_%s" % (
            platform.os,
            platform.arch,
        )],
        outs = ["aquerydiff_%s_%s.zip" % (
            platform.os,
            platform.arch,
        )],
        cmd = """
    cp $(location aquerydiff_{os}_{arch}) aquerydiff
    $(location @bazel_tools//tools/zip:zipper) c $@ aquerydiff
    """.format(
            arch = platform.arch,
            os = platform.os,
        ),
        tools = ["@bazel_tools//tools/zip:zipper"],
        visibility = ["//visibility:public"],
    )
    for platform in platforms
]
